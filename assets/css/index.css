/* set the body's background-color to black */

body {
    background-color: #000;
}


/* Now we need to position the welcome text and view all campgrounds buton: */

#landing-header {
    /*
      make all of the elements inside the landing-header div to be in front of the background images and forward to us
      */
    z-index: 1;
    /*
      The position is set to relative so we can use the z-index property; the default position value is static, which ignores z-index
      */
    position: relative;
    text-align: center;
    /*
    We use padding-top to vertically center our div, 
    since it's contents take up quite a bit of space, we use 40vh (view height) instead of 50, this way the content looks more visually centered
    */
    padding-top: 40vh;
}


/*
  We also need to change the h1 text color to white:
  */

#landing-header h1 {
    font-size: 9rem;
    position: relative;
    color: white;
    text-shadow: 0px 1px 0px #999, 0px 2px 0px #888, 0px 3px 0px #777, 0px 4px 0px #666, 0px 5px 0px #555, 0px 6px 0px #444, 0px 7px 0px #333, 0px 8px 7px #001135;
    /* text-shadow: 0px 2px 10px rgba(255, 255, 255, 0.5);
    -webkit-background-clip: text;
    -moz-background-clip: text;
    background-clip: text; */
}

#landing-header h1 #background {
    height: 60%;
    position: absolute;
    color: rgb(249, 160, 63);
    overflow: hidden;
    text-shadow: 0px 1px 0px rgba(249, 159, 63, 0.534), 0px 2px 0px rgba(249, 159, 63, 0.342), 0px 3px 0px rgba(249, 159, 63, 0.219), 0px 4px 0px #666, 0px 5px 0px #555, 0px 6px 0px #444, 0px 7px 0px #333, 0px 8px 7px #001135;
    /* text-shadow: 0px 2px 10px rgba(255, 255, 255, 0.5);
    -webkit-background-clip: text;
    -moz-background-clip: text;
    background-clip: text; */
}


/*
  The unordered list and its list items that we added to landing.ejs need some styling to make them fit across the entire page
  First we'll style the unordered list:
  */


/*
  This will fix the ul to the window, 
  positioning it in the top left corner (top: 0, left: 0) and filling the entire screen by setting width and height to 100%; 
  we set the z-index to 0 to keep the background images behind the rest of the page's content; 
  list-style is set to none in order to hide the bullet points from the list's default styling; 
  margin and padding are removed entirely
  */

.slideshow {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 0;
    list-style: none;
    margin: 0;
    padding: 0;
}


/*
  Now we can style all of the list items:
  */


/*
  Notice the animation property at the bottom of this rule, this is how we add an animation to an element; 
  in this case we have an animation named imageAnimation that lasts for 50s (seconds), 
               keeps linear timing (the whole animation runs at the same speed), 
               and loops an infinite number of times
  */

.slideshow li {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    /*
    to allow the image size to take up the entire space on the page
    */
    background-size: cover;
    /*
    center the image to the page
    */
    background-position: 50% 50%;
    background-repeat: no-repeat;
    opacity: 0;
    z-index: 0;
    animation: imageAnimation 50s linear infinite;
}


/*
  Add background-image to each list item and the last four need an animation-delay 
  (this way they all fire off one after the other in ten second intervals):
      - each image fades in after the previous image stays for 10s
  */

.slideshow li:nth-child(1) {
    background-image: url('../img/index_background1.jpeg');
}

.slideshow li:nth-child(2) {
    background-image: url('../img/index_background2.jpg');
    animation-delay: 10s;
}

.slideshow li:nth-child(3) {
    background-image: url('../img/index_background3.jpeg');
    animation-delay: 20s;
}

.slideshow li:nth-child(4) {
    background-image: url('../img/index_background4.jpg');
    animation-delay: 30s;
}

.slideshow li:nth-child(5) {
    background-image: url('../img/index_background5.jpeg');
    animation-delay: 40s;
}


/*
  Now we can create the keyframes for the animation:
      - use keyframes selector
  */


/*
  The animation will be named imageAnimation, which matches with the value from our animation property in the .slideshow (unordered list) rule
  - From 0% to 10% (the beginning of our animation), the list item begins changing its opacity changes from 0 to 1 (invisible to visible)
  - the animation-timing-function is set to ease-in at 0% and ease-out and 10%, this makes for a more smooth fade-in (read more about this here)
  - The list item's opacity then stays at 1 until it reaches 20% at which point it fades back out, reaching 0 at 30% and staying at 0 for the remainder of the animation
  - If we have 5 background images visible for 5 seconds each, then the time it takes to fade the image in and keep it visible is 10 seconds with a 5 second crossfade/fadeout into the next image; 
    The entire animation cycle for all 5 images takes 50 seconds total
  - 100% divided by 5 is 20% so each image's fadein and visibility should last 20% of the cycle; 
    half of 20% is 10%, that is why our fade in is from 0% to 10%, then we keep it visible until 20% is reached and begin the fadeout from 20% to 30%, the 5 second fadeout overlaps the next image's 5 second fadein, which is what creates the crossfade effect
  */

@keyframes imageAnimation {
    0% {
        opacity: 0;
        animation-timing-function: ease-in;
    }
    10% {
        opacity: 1;
        animation-timing-function: ease-out;
    }
    20% {
        opacity: 1
    }
    30% {
        opacity: 0
    }
}


/*
  Lastly, we need to add animation support for older browsers; 
  we've already added the modernizr CDN to our landing page's head element, now we just need the following rule in our landing.css:
  */


/* Older browser support - .no-css animations class added by modernizr */


/*specify that old browser that does not support CSS animation will just hace one slide visible that will be the background*/

.no-cssanimations .slideshow li {
    opacity: 1;
}


/*
control nav bar behaviour when it is scrolled wrt JS code in html file
*/

.navbar.scrolled {
    background: rgb(33, 17, 3);
    /*transition effect to change the nav bar color*/
    transition: background 1s;
}

.entry-button {
    color: rgb(61, 19, 8);
    size: 2rem;
}

.letter {
    -webkit-transition: -webkit-transform 0.5s;
    -moz-transition: -moz-transform 0.5s;
    transition: transform 0.5s;
}

.flip-animation {
    -moz-transform: rotateX(-180deg);
    -webkit-transform: rotateX(-180deg);
    transform: rotateX(-180deg);
}